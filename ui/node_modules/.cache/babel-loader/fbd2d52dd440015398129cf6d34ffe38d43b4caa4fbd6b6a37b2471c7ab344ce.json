{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import'./App.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function GameScreen(props){const[gameTime,setGameTime]=useState(20);const[gameScore,setGameScore]=useState(0);const[prompt,setPrompt]=useState('');const[answer,setAnswer]=useState('');const[inputError,setInputError]=useState(false);const[inputErrorMessage,setInputErrorMessage]=useState('');const[promptPool,setPromptPool]=useState([]);const[validateUrl,setValidateUrl]=useState('');const[isGameOver,setIsGameOver]=useState(false);const[showScoreModal,setShowScoreModal]=useState(false);const[username,setUsername]=useState('');const[usernameError,setUsernameError]=useState('');const answerr=useRef(answer);const promptt=useRef(prompt);const promptPoool=useRef(promptPool);const loadPrompt=()=>{const isAlpha=str=>/^[A-Za-z]+$/.test(str);let newPrompt=\"\";while(!isAlpha(newPrompt)){let index=Math.floor(Math.random()*500);let indexWord=promptPoool.current[index].word;if(isAlpha(indexWord)){let sliceStart=Math.floor(Math.random()*3)+1;newPrompt=indexWord.substring(sliceStart,sliceStart+3);}}setPrompt(newPrompt);};const resetGame=()=>{setIsGameOver(false);setGameTime(20);setGameScore(0);setInputError(false);setInputErrorMessage('');loadPrompt();};const answerSuccess=()=>{setGameScore(prevScore=>prevScore+1);setInputError(false);setInputErrorMessage('');setAnswer('');setGameTime(20);loadPrompt();};const getPromptPool=async()=>{try{const response=await fetch(\"https://api.datamuse.com/words?sp=???????&max=500\");const data=await response.json();setPromptPool(data);}catch(error){console.error('Error fetching prompt pool:',error);}};const setVals=e=>{setAnswer(e.target.value);setValidateUrl(\"https://api.dictionaryapi.dev/api/v2/entries/en/\".concat(e.target.value));};const gameOver=()=>{setIsGameOver(true);setInputError(true);setInputErrorMessage(\"Game Over!\");};const decrement=()=>{setGameTime(prevTime=>prevTime-1);};useEffect(()=>{if(gameTime>0&&!isGameOver){const timerId=setTimeout(decrement,1000);return()=>clearTimeout(timerId);}else if(gameTime===0){gameOver();}},[gameTime,isGameOver]);useEffect(()=>{answerr.current=answer;},[answer]);useEffect(()=>{promptt.current=prompt;},[prompt]);useEffect(()=>{promptPoool.current=promptPool;},[promptPool]);useEffect(()=>{getPromptPool();},[]);useEffect(()=>{if(promptPool.length>0){loadPrompt();}},[promptPool]);useEffect(()=>{const handleKeyDown=e=>{if(e.keyCode===13){validate();}};document.addEventListener('keydown',handleKeyDown);return()=>document.removeEventListener('keydown',handleKeyDown);},[]);const validate=async()=>{const start=answerr.current.slice(0,3);const end=answerr.current.slice(-3);try{const response=await fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en/\".concat(answerr.current));if(response.status===200&&start!==promptt.current&&end!==promptt.current&&answerr.current.includes(promptt.current)){answerSuccess();}else{handleValidationError(response.status,start,end);}}catch(error){console.error('Error validating answer:',error);}};const handleValidationError=(status,start,end)=>{if(status===404){setInputErrorMessage('Not a Word!');}else if(start===promptt.current){setInputErrorMessage('Answer cannot start with the prompt!');}else if(end===promptt.current){setInputErrorMessage('Answer cannot end with the prompt!');}else if(!answerr.current.includes(promptt.current)){setInputErrorMessage('Answer must contain the prompt!');}setInputError(true);setAnswer('');};const saveAndSubmit=()=>{if(username.trim()===''){setUsernameError('Username cannot be empty');return;}const payload={username,score:gameScore};axios.post('http://44.223.184.1:8080/score',payload).then(response=>{if(response.status===200){props.setShowing('scoreboard');}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"topper\",children:\"WHWG\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"gameBox\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"attributesContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"featureBox\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"timeScoreText\",children:\"TIME\"}),/*#__PURE__*/_jsx(\"span\",{className:\"timeText\",children:gameTime})]}),/*#__PURE__*/_jsx(\"div\",{className:\"featureBoxPrompt\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"promptText\",children:[\"[\",prompt,\"]\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"featureBox\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"timeScoreText\",children:\"SCORE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"timeText\",children:gameScore})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputContainer\",children:[/*#__PURE__*/_jsx(\"input\",{disabled:isGameOver,className:\"answerInput\",onChange:setVals,value:answer}),inputError&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"inputError\",children:/*#__PURE__*/_jsx(\"span\",{className:\"inputErrorText\",children:inputErrorMessage})}),inputErrorMessage==='Game Over!'&&/*#__PURE__*/_jsxs(\"div\",{className:\"playOrSave\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:resetGame,style:{fontSize:'2em',textDecoration:'underline'},children:\"Play Again\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'2em'},children:\" or \"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>setShowScoreModal(true),style:{fontSize:'2em',textDecoration:'underline'},children:\"Save\"})]})]}),showScoreModal&&/*#__PURE__*/_jsxs(\"div\",{className:\"enterScoreModal\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"timeText\",children:[\"You scored \",gameScore]}),/*#__PURE__*/_jsx(\"span\",{className:\"timeText\",children:\"Enter a name to save your score\"}),/*#__PURE__*/_jsx(\"input\",{onChange:e=>{setUsername(e.target.value);setUsernameError('');},className:\"nameInput\",value:username}),usernameError&&/*#__PURE__*/_jsx(\"div\",{className:\"inputError\",children:usernameError}),/*#__PURE__*/_jsx(\"span\",{onClick:saveAndSubmit,style:{fontSize:'2em',textDecoration:'underline'},children:\"Save\"})]})]})]})]});}export default GameScreen;","map":{"version":3,"names":["useEffect","useRef","useState","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GameScreen","props","gameTime","setGameTime","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","usernameError","setUsernameError","answerr","promptt","promptPoool","loadPrompt","isAlpha","str","test","newPrompt","index","Math","floor","random","indexWord","current","word","sliceStart","substring","resetGame","answerSuccess","prevScore","getPromptPool","response","fetch","data","json","error","console","setVals","e","target","value","concat","gameOver","decrement","prevTime","timerId","setTimeout","clearTimeout","length","handleKeyDown","keyCode","validate","document","addEventListener","removeEventListener","start","slice","end","status","includes","handleValidationError","saveAndSubmit","trim","payload","score","post","then","setShowing","className","children","disabled","onChange","onClick","style","fontSize","textDecoration"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(20);\n    const [gameScore, setGameScore] = useState(0);\n    const [prompt, setPrompt] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n    const [promptPool, setPromptPool] = useState([]);\n    const [validateUrl, setValidateUrl] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n    const [username, setUsername] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n\n    const answerr = useRef(answer);\n    const promptt = useRef(prompt);\n    const promptPoool = useRef(promptPool);\n\n    const loadPrompt = () => {\n        const isAlpha = (str) => /^[A-Za-z]+$/.test(str);\n\n        let newPrompt = \"\";\n        while (!isAlpha(newPrompt)) {\n            let index = Math.floor(Math.random() * 500);\n            let indexWord = promptPoool.current[index].word;\n            if (isAlpha(indexWord)) {\n                let sliceStart = Math.floor(Math.random() * 3) + 1;\n                newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n            }\n        }\n        setPrompt(newPrompt);\n    };\n\n    const resetGame = () => {\n        setIsGameOver(false);\n        setGameTime(20);\n        setGameScore(0);\n        setInputError(false);\n        setInputErrorMessage('');\n        loadPrompt();\n    };\n\n    const answerSuccess = () => {\n        setGameScore((prevScore) => prevScore + 1);\n        setInputError(false);\n        setInputErrorMessage('');\n        setAnswer('');\n        setGameTime(20);\n        loadPrompt();\n    };\n\n    const getPromptPool = async () => {\n        try {\n            const response = await fetch(\"https://api.datamuse.com/words?sp=???????&max=500\");\n            const data = await response.json();\n            setPromptPool(data);\n        } catch (error) {\n            console.error('Error fetching prompt pool:', error);\n        }\n    };\n\n    const setVals = (e) => {\n        setAnswer(e.target.value);\n        setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n    };\n\n    const gameOver = () => {\n        setIsGameOver(true);\n        setInputError(true);\n        setInputErrorMessage(\"Game Over!\");\n    };\n\n    const decrement = () => {\n        setGameTime((prevTime) => prevTime - 1);\n    };\n\n    useEffect(() => {\n        if (gameTime > 0 && !isGameOver) {\n            const timerId = setTimeout(decrement, 1000);\n            return () => clearTimeout(timerId);\n        } else if (gameTime === 0) {\n            gameOver();\n        }\n    }, [gameTime, isGameOver]);\n\n    useEffect(() => {\n        answerr.current = answer;\n    }, [answer]);\n\n    useEffect(() => {\n        promptt.current = prompt;\n    }, [prompt]);\n\n    useEffect(() => {\n        promptPoool.current = promptPool;\n    }, [promptPool]);\n\n    useEffect(() => {\n        getPromptPool();\n    }, []);\n\n    useEffect(() => {\n        if (promptPool.length > 0) {\n            loadPrompt();\n        }\n    }, [promptPool]);\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.keyCode === 13) {\n                validate();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, []);\n\n    const validate = async () => {\n        const start = answerr.current.slice(0, 3);\n        const end = answerr.current.slice(-3);\n\n        try {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n            if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n                answerSuccess();\n            } else {\n                handleValidationError(response.status, start, end);\n            }\n        } catch (error) {\n            console.error('Error validating answer:', error);\n        }\n    };\n\n    const handleValidationError = (status, start, end) => {\n        if (status === 404) {\n            setInputErrorMessage('Not a Word!');\n        } else if (start === promptt.current) {\n            setInputErrorMessage('Answer cannot start with the prompt!');\n        } else if (end === promptt.current) {\n            setInputErrorMessage('Answer cannot end with the prompt!');\n        } else if (!answerr.current.includes(promptt.current)) {\n            setInputErrorMessage('Answer must contain the prompt!');\n        }\n        setInputError(true);\n        setAnswer('');\n    };\n\n    const saveAndSubmit = () => {\n        if (username.trim() === '') {\n            setUsernameError('Username cannot be empty');\n            return;\n        }\n\n        const payload = {\n            username,\n            score: gameScore\n        };\n        axios.post('http://44.223.184.1:8080/score', payload)\n            .then((response) => {\n                if (response.status === 200) {\n                    props.setShowing('scoreboard');\n                }\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <span className='topper'>WHWG</span>\n            <div className='gameBox'>\n                <div className='attributesContainer'>\n                    <div className='featureBox'>\n                        <span className='timeScoreText'>TIME</span>\n                        <span className='timeText'>{gameTime}</span>\n                    </div>\n                    <div className='featureBoxPrompt'>\n                        <span className='promptText'>[{prompt}]</span>\n                    </div>\n                    <div className='featureBox'>\n                        <span className='timeScoreText'>SCORE</span>\n                        <span className='timeText'>{gameScore}</span>\n                    </div>\n                </div>\n                <div className='inputContainer'>\n                    <input disabled={isGameOver} className='answerInput' onChange={setVals} value={answer} />\n                    {inputError && (\n                        <>\n                            <div className='inputError'>\n                                <span className='inputErrorText'>{inputErrorMessage}</span>\n                            </div>\n                            {inputErrorMessage === 'Game Over!' && (\n                                <div className='playOrSave'>\n                                    <span onClick={resetGame} style={{ fontSize: '2em', textDecoration: 'underline' }}>Play Again</span>\n                                    <span style={{ fontSize: '2em' }}> or </span>\n                                    <span onClick={() => setShowScoreModal(true)} style={{ fontSize: '2em', textDecoration: 'underline' }}>Save</span>\n                                </div>\n                            )}\n                        </>\n                    )}\n                    {showScoreModal && (\n                        <div className='enterScoreModal'>\n                            <span className='timeText'>You scored {gameScore}</span>\n                            <span className='timeText'>Enter a name to save your score</span>\n                            <input\n                                onChange={(e) => {\n                                    setUsername(e.target.value);\n                                    setUsernameError('');\n                                }}\n                                className='nameInput'\n                                value={username}\n                            />\n                            {usernameError && <div className='inputError'>{usernameError}</div>}\n                            <span onClick={saveAndSubmit} style={{ fontSize: '2em', textDecoration: 'underline' }}>Save</span>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}