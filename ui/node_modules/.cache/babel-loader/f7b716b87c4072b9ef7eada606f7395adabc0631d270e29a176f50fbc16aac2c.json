{"ast":null,"code":"var _jsxFileName = \"/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameScreen(props) {\n  _s();\n  const [gameTime, setGameTime] = useState(20);\n  const [gameScore, setGameScore] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [promptPool, setPromptPool] = useState([]);\n  const [validateUrl, setValidateUrl] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [couldAnswer, setCouldAnswer] = useState('');\n  const [couldAnswerDef, setCouldAnswerDef] = useState('');\n  const answerr = useRef(answer);\n  const promptt = useRef(prompt);\n  const promptPoool = useRef(promptPool);\n  const loadPrompt = () => {\n    const isAlpha = str => /^[A-Za-z]+$/.test(str);\n    let newPrompt = \"\";\n    while (!isAlpha(newPrompt)) {\n      let index = Math.floor(Math.random() * 500);\n      let indexWord = promptPoool.current[index].word;\n      if (isAlpha(indexWord)) {\n        let sliceStart = Math.floor(Math.random() * 3) + 1;\n        newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n        setCouldAnswer(indexWord);\n        getDef(indexWord);\n      }\n    }\n    setPrompt(newPrompt);\n  };\n  const resetGame = () => {\n    setIsGameOver(false);\n    setGameTime(20);\n    setGameScore(0);\n    setInputError(false);\n    setInputErrorMessage('');\n    loadPrompt();\n  };\n  const answerSuccess = () => {\n    setGameScore(prevScore => prevScore + 1);\n    setInputError(false);\n    setInputErrorMessage('');\n    setAnswer('');\n    setGameTime(20);\n    loadPrompt();\n  };\n  const getPromptPool = async () => {\n    try {\n      const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n      const data = await response.json();\n      setPromptPool(data);\n    } catch (error) {\n      console.error('Error fetching prompt pool:', error);\n    }\n  };\n  const setVals = e => {\n    setAnswer(e.target.value);\n    setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n  };\n  const getDef = word => {\n    try {\n      const response = fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n      if (response.status === 200) {\n        console.log(response[0]);\n        setCouldAnswerDef(response[0].meanings[0].definitions[0].definition);\n      } else {\n        console.error('Error getting definition');\n      }\n    } catch (error) {\n      console.error('Error getting definition');\n    }\n  };\n  const gameOver = () => {\n    setIsGameOver(true);\n    setInputError(true);\n    setInputErrorMessage(\"Game Over!\");\n  };\n  const decrement = () => {\n    setGameTime(prevTime => prevTime - 1);\n  };\n  useEffect(() => {\n    if (gameTime > 0 && !isGameOver) {\n      const timerId = setTimeout(decrement, 1000);\n      return () => clearTimeout(timerId);\n    } else if (gameTime === 0) {\n      gameOver();\n    }\n  }, [gameTime, isGameOver]);\n  useEffect(() => {\n    answerr.current = answer;\n  }, [answer]);\n  useEffect(() => {\n    promptt.current = prompt;\n  }, [prompt]);\n  useEffect(() => {\n    promptPoool.current = promptPool;\n  }, [promptPool]);\n  useEffect(() => {\n    getPromptPool();\n  }, []);\n  useEffect(() => {\n    if (promptPool.length > 0) {\n      loadPrompt();\n    }\n  }, [promptPool]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        validate();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  const validate = async () => {\n    const start = answerr.current.slice(0, 3);\n    const end = answerr.current.slice(-3);\n    try {\n      const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n      if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n        answerSuccess();\n      } else {\n        handleValidationError(response.status, start, end);\n      }\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n  const handleValidationError = (status, start, end) => {\n    if (status === 404) {\n      setInputErrorMessage('Not a Word!');\n    } else if (start === promptt.current) {\n      setInputErrorMessage('Answer cannot start with the prompt!');\n    } else if (end === promptt.current) {\n      setInputErrorMessage('Answer cannot end with the prompt!');\n    } else if (!answerr.current.includes(promptt.current)) {\n      setInputErrorMessage('Answer must contain the prompt!');\n    }\n    setInputError(true);\n    setAnswer('');\n  };\n  const saveAndSubmit = () => {\n    if (username.trim() === '') {\n      setUsernameError('Username cannot be empty');\n      return;\n    }\n    const payload = {\n      username,\n      score: gameScore\n    };\n    axios.post('http://44.223.184.1:8080/score', payload).then(response => {\n      if (response.status === 200) {\n        props.setShowing('scoreboard');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"topper\",\n      children: \"WHWG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributesContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featureBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeScoreText\",\n            children: \"TIME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: gameTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featureBoxPrompt\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"promptText\",\n            children: [\"[\", prompt, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"featureBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeScoreText\",\n            children: \"SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: gameScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: isGameOver,\n          className: \"answerInput\",\n          onChange: setVals,\n          value: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), inputError && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inputErrorText\",\n              children: inputErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), inputErrorMessage === 'Game Over!' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playOrSave\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: resetGame,\n              className: \"timeText\",\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '2em'\n              },\n              children: \" or \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setShowScoreModal(true),\n              className: \"timeText\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), showScoreModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enterScoreModal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: [\"You scored \", gameScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: [\"You could have answered \\\"\", couldAnswer, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeTextItalic\",\n            children: [\"\\\"\", couldAnswerDef, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: \"Enter a name to save your score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setUsername(e.target.value);\n              setUsernameError('');\n            },\n            className: \"nameInput\",\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: saveAndSubmit,\n            style: {\n              fontSize: '2em',\n              textDecoration: 'underline'\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"ffp98gAurTaPTjSvKTeXagr0IaA=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","props","_s","gameTime","setGameTime","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","usernameError","setUsernameError","couldAnswer","setCouldAnswer","couldAnswerDef","setCouldAnswerDef","answerr","promptt","promptPoool","loadPrompt","isAlpha","str","test","newPrompt","index","Math","floor","random","indexWord","current","word","sliceStart","substring","getDef","resetGame","answerSuccess","prevScore","getPromptPool","response","fetch","data","json","error","console","setVals","e","target","value","status","log","meanings","definitions","definition","gameOver","decrement","prevTime","timerId","setTimeout","clearTimeout","length","handleKeyDown","keyCode","validate","document","addEventListener","removeEventListener","start","slice","end","includes","handleValidationError","saveAndSubmit","trim","payload","score","post","then","setShowing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onChange","onClick","style","fontSize","textDecoration","_c","$RefreshReg$"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(20);\n    const [gameScore, setGameScore] = useState(0);\n    const [prompt, setPrompt] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n    const [promptPool, setPromptPool] = useState([]);\n    const [validateUrl, setValidateUrl] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n    const [username, setUsername] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [couldAnswer, setCouldAnswer] = useState('')\n    const [couldAnswerDef, setCouldAnswerDef] = useState('')\n\n    const answerr = useRef(answer);\n    const promptt = useRef(prompt);\n    const promptPoool = useRef(promptPool);\n\n    const loadPrompt = () => {\n        const isAlpha = (str) => /^[A-Za-z]+$/.test(str);\n\n        let newPrompt = \"\";\n        while (!isAlpha(newPrompt)) {\n            let index = Math.floor(Math.random() * 500);\n            let indexWord = promptPoool.current[index].word;\n            if (isAlpha(indexWord)) {\n                let sliceStart = Math.floor(Math.random() * 3) + 1;\n                newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n                setCouldAnswer(indexWord);\n                getDef(indexWord);\n            }\n        }\n        setPrompt(newPrompt);\n    };\n\n    const resetGame = () => {\n        setIsGameOver(false);\n        setGameTime(20);\n        setGameScore(0);\n        setInputError(false);\n        setInputErrorMessage('');\n        loadPrompt();\n    };\n\n    const answerSuccess = () => {\n        setGameScore((prevScore) => prevScore + 1);\n        setInputError(false);\n        setInputErrorMessage('');\n        setAnswer('');\n        setGameTime(20);\n        loadPrompt();\n    };\n\n    const getPromptPool = async () => {\n        try {\n            const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n            const data = await response.json();\n            setPromptPool(data);\n        } catch (error) {\n            console.error('Error fetching prompt pool:', error);\n        }\n    };\n\n    const setVals = (e) => {\n        setAnswer(e.target.value);\n        setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n    };\n\n    const getDef = (word) => {\n        try {\n            const response = fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n            if (response.status === 200) {\n                console.log(response[0])\n                setCouldAnswerDef(response[0].meanings[0].definitions[0].definition);\n            } else {\n                console.error('Error getting definition');\n            }\n        } catch (error) {\n            console.error('Error getting definition');\n        }\n    };\n\n    const gameOver = () => {\n        setIsGameOver(true);\n        setInputError(true);\n        setInputErrorMessage(\"Game Over!\");\n    };\n\n    const decrement = () => {\n        setGameTime((prevTime) => prevTime - 1);\n    };\n\n    useEffect(() => {\n        if (gameTime > 0 && !isGameOver) {\n            const timerId = setTimeout(decrement, 1000);\n            return () => clearTimeout(timerId);\n        } else if (gameTime === 0) {\n            gameOver();\n        }\n    }, [gameTime, isGameOver]);\n\n    useEffect(() => {\n        answerr.current = answer;\n    }, [answer]);\n\n    useEffect(() => {\n        promptt.current = prompt;\n    }, [prompt]);\n\n    useEffect(() => {\n        promptPoool.current = promptPool;\n    }, [promptPool]);\n\n    useEffect(() => {\n        getPromptPool();\n    }, []);\n\n    useEffect(() => {\n        if (promptPool.length > 0) {\n            loadPrompt();\n        }\n    }, [promptPool]);\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.keyCode === 13) {\n                validate();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, []);\n\n    const validate = async () => {\n        const start = answerr.current.slice(0, 3);\n        const end = answerr.current.slice(-3);\n\n        try {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n            if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n                answerSuccess();\n            } else {\n                handleValidationError(response.status, start, end);\n            }\n        } catch (error) {\n            console.error('Error validating answer:', error);\n        }\n    };\n\n    const handleValidationError = (status, start, end) => {\n        if (status === 404) {\n            setInputErrorMessage('Not a Word!');\n        } else if (start === promptt.current) {\n            setInputErrorMessage('Answer cannot start with the prompt!');\n        } else if (end === promptt.current) {\n            setInputErrorMessage('Answer cannot end with the prompt!');\n        } else if (!answerr.current.includes(promptt.current)) {\n            setInputErrorMessage('Answer must contain the prompt!');\n        }\n        setInputError(true);\n        setAnswer('');\n    };\n\n    const saveAndSubmit = () => {\n        if (username.trim() === '') {\n            setUsernameError('Username cannot be empty');\n            return;\n        }\n\n        const payload = {\n            username,\n            score: gameScore\n        };\n        axios.post('http://44.223.184.1:8080/score', payload)\n            .then((response) => {\n                if (response.status === 200) {\n                    props.setShowing('scoreboard');\n                }\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <span className='topper'>WHWG</span>\n            <div className='gameBox'>\n                <div className='attributesContainer'>\n                    <div className='featureBox'>\n                        <span className='timeScoreText'>TIME</span>\n                        <span className='timeText'>{gameTime}</span>\n                    </div>\n                    <div className='featureBoxPrompt'>\n                        <span className='promptText'>[{prompt}]</span>\n                    </div>\n                    <div className='featureBox'>\n                        <span className='timeScoreText'>SCORE</span>\n                        <span className='timeText'>{gameScore}</span>\n                    </div>\n                </div>\n                <div className='inputContainer'>\n                    <input disabled={isGameOver} className='answerInput' onChange={setVals} value={answer} />\n                    {inputError && (\n                        <>\n                            <div className='inputError'>\n                                <span className='inputErrorText'>{inputErrorMessage}</span>\n                            </div>\n                            {inputErrorMessage === 'Game Over!' && (\n                                <div className='playOrSave'>\n                                    <span onClick={resetGame} className='timeText'>Play Again</span>\n                                    <span style={{ fontSize: '2em' }}> or </span>\n                                    <span onClick={() => setShowScoreModal(true)}className='timeText'>Save</span>\n                                </div>\n                            )}\n                        </>\n                    )}\n                    {showScoreModal && (\n                        <div className='enterScoreModal'>\n                            <span className='timeText'>You scored {gameScore}</span>\n                            <span className='timeText'>You could have answered \"{couldAnswer}\"</span>\n                            <span className='timeTextItalic'>\"{couldAnswerDef}\"</span>\n                            <span className='timeText'>Enter a name to save your score</span>\n                            <input\n                                onChange={(e) => {\n                                    setUsername(e.target.value);\n                                    setUsernameError('');\n                                }}\n                                className='nameInput'\n                                value={username}\n                            />\n                            {usernameError && <div className='inputError'>{usernameError}</div>}\n                            <span onClick={saveAndSubmit} style={{ fontSize: '2em', textDecoration: 'underline' }}>Save</span>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}