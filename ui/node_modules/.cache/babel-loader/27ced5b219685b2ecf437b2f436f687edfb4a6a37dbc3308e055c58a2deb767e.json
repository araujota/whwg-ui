{"ast":null,"code":"var _jsxFileName = \"/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\nimport Chime_01 from './assets/Chime_01.mp3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameScreen(props) {\n  _s();\n  const [gameTime, setGameTime] = useState(20);\n  const [loadingValidation, setLoadingValidaton] = useState(false);\n  const [gameScore, setGameScore] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [promptPool, setPromptPool] = useState([]);\n  const [validateUrl, setValidateUrl] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [couldAnswer, setCouldAnswer] = useState('');\n  const [couldAnswerDef, setCouldAnswerDef] = useState('');\n  const [saveLoading, setSaveLoading] = useState(false);\n  const answerr = useRef(answer);\n  const promptt = useRef(prompt);\n  const promptPoool = useRef(promptPool);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const loadPrompt = () => {\n    const isAlpha = str => /^[A-Za-z]+$/.test(str);\n    let newPrompt = \"\";\n    while (!isAlpha(newPrompt)) {\n      let index = Math.floor(Math.random() * 500);\n      let indexWord = promptPoool.current[index].word;\n      if (isAlpha(indexWord)) {\n        let sliceStart = Math.floor(Math.random() * 3) + 1;\n        newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n        setCouldAnswer(indexWord);\n        getDef(indexWord);\n      }\n    }\n    setPrompt(newPrompt);\n  };\n  const resetGame = () => {\n    setGameTime(20);\n    setGameScore(0);\n    setInputError(false);\n    setInputErrorMessage('');\n    loadPrompt();\n    setIsGameOver(false);\n  };\n  const playAudio = () => {\n    new Audio(Chime_01).play();\n  };\n  const answerSuccess = () => {\n    setGameScore(prevScore => prevScore + 1);\n    setInputError(true);\n    setInputErrorMessage('+1');\n    setTimeout(clearInputMsg, 1500);\n    setAnswer('');\n    setGameTime(20);\n    loadPrompt();\n    setLoadingValidaton(false);\n  };\n  const getPromptPool = async () => {\n    try {\n      const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n      const data = await response.json();\n      setPromptPool(data);\n    } catch (error) {\n      console.error('Error fetching prompt pool:', error);\n    }\n  };\n  const setVals = e => {\n    setAnswer(e.target.value.toLowerCase());\n    setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n  };\n  const getDef = async word => {\n    const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n    } else {\n      console.error('Error getting definition');\n      setCouldAnswerDef('--');\n    }\n  };\n  const gameOver = () => {\n    setIsGameOver(true);\n    setInputError(true);\n    setInputErrorMessage(\"Game Over!\");\n  };\n  const decrement = () => {\n    setGameTime(prevTime => prevTime - 1);\n  };\n  const clearInputMsg = () => {\n    if (inputErrorMessage !== \"Game Over\") {\n      setInputErrorMessage('');\n      setInputError(false);\n    }\n  };\n  useEffect(() => {\n    if (gameTime > 0 && !isGameOver) {\n      const timerId = setTimeout(decrement, 1000);\n      return () => clearTimeout(timerId);\n    } else if (gameTime === 0) {\n      gameOver();\n    }\n  }, [gameTime, isGameOver]);\n  useEffect(() => {\n    answerr.current = answer;\n  }, [answer]);\n  useEffect(() => {\n    promptt.current = prompt;\n  }, [prompt]);\n  useEffect(() => {\n    promptPoool.current = promptPool;\n  }, [promptPool]);\n  useEffect(() => {\n    getPromptPool();\n  }, []);\n  useEffect(() => {\n    if (promptPool.length > 0) {\n      loadPrompt();\n    }\n  }, [promptPool]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        validate();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  const validate = async () => {\n    setLoadingValidaton(true);\n    const start = answerr.current.slice(0, 3);\n    const end = answerr.current.slice(-3);\n    try {\n      const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n      if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n        playAudio();\n        answerSuccess();\n      } else {\n        handleValidationError(response.status, start, end);\n      }\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n  const handleValidationError = (status, start, end) => {\n    if (status === 404) {\n      setInputErrorMessage('Not a Word!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1500);\n    } else if (start === promptt.current) {\n      setInputErrorMessage('Answer cannot start with the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1500);\n    } else if (end === promptt.current) {\n      setInputErrorMessage('Answer cannot end with the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1500);\n    } else if (!answerr.current.includes(promptt.current)) {\n      setInputErrorMessage('Answer must contain the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1500);\n    }\n    setInputError(true);\n    setAnswer('');\n  };\n  const saveAndSubmit = () => {\n    if (username.trim() === '') {\n      setUsernameError('Username cannot be empty');\n      return;\n    }\n    setSaveLoading(true);\n    const payload = {\n      username,\n      score: gameScore\n    };\n    axios.post('http://44.223.184.1:8080/score', payload).then(response => {\n      if (response.status === 200) {\n        setSaveLoading(false);\n        props.setShowing('scoreboard');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"topper\",\n        children: \"Speedle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributesContainer\",\n        children: isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"couldHave\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeScoreText\",\n            children: [\"You could have answered \\\"\", couldAnswer, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeTextItalic\",\n            children: [\"\\\"\", couldAnswerDef, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"TIME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBoxPrompt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"promptText\",\n              children: [\"[\", prompt, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"SCORE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'relative',\n            top: '5px'\n          },\n          children: \"'Enter' to Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: isGameOver,\n          autoComplete: \"off\",\n          className: \"answerInput\",\n          onChange: setVals,\n          value: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), loadingValidation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputError\",\n          children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n            size: 20,\n            style: {\n              position: 'absolute',\n              right: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }, this) : null, inputError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: inputErrorMessage === '+1' ? 'inputErrorSuccess' : 'inputError',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inputErrorText\",\n            children: inputErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }, this), inputErrorMessage === 'Game Over!' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playOrSave\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: showScoreModal,\n            onClick: resetGame,\n            className: \"startButton\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: showScoreModal,\n            onClick: () => props.setShowing('rules'),\n            className: \"startButton\",\n            children: \"Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 33\n        }, this), showScoreModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enterScoreModal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: [\"You scored \", gameScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: \"Enter a name to save your score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setUsername(e.target.value);\n              setUsernameError('');\n            },\n            className: \"nameInput\",\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saveInputError\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 47\n          }, this), saveLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              size: 20,\n              style: {\n                position: 'absolute',\n                top: '20px',\n                right: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 41\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveAndSubmit,\n              className: \"startButton\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowScoreModal(false),\n              className: \"startButton\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"QGdkFoqOKNLSjsw+GB2BBfBd++c=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","ClipLoader","Chime_01","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","props","_s","gameTime","setGameTime","loadingValidation","setLoadingValidaton","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","usernameError","setUsernameError","couldAnswer","setCouldAnswer","couldAnswerDef","setCouldAnswerDef","saveLoading","setSaveLoading","answerr","promptt","promptPoool","inputRef","current","focus","loadPrompt","isAlpha","str","test","newPrompt","index","Math","floor","random","indexWord","word","sliceStart","substring","getDef","resetGame","playAudio","Audio","play","answerSuccess","prevScore","setTimeout","clearInputMsg","getPromptPool","response","fetch","data","json","error","console","setVals","e","target","value","toLowerCase","status","meanings","definitions","definition","gameOver","decrement","prevTime","timerId","clearTimeout","length","handleKeyDown","keyCode","validate","document","addEventListener","removeEventListener","start","slice","end","includes","handleValidationError","saveAndSubmit","trim","payload","score","post","then","setShowing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","disabled","autoComplete","onChange","size","right","onClick","_c","$RefreshReg$"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\nimport Chime_01 from './assets/Chime_01.mp3'\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(20);\n    const [loadingValidation, setLoadingValidaton] = useState(false);\n    const [gameScore, setGameScore] = useState(0);\n    const [prompt, setPrompt] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n    const [promptPool, setPromptPool] = useState([]);\n    const [validateUrl, setValidateUrl] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n    const [username, setUsername] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [couldAnswer, setCouldAnswer] = useState('')\n    const [couldAnswerDef, setCouldAnswerDef] = useState('')\n    const [saveLoading, setSaveLoading] = useState(false);\n\n    const answerr = useRef(answer);\n    const promptt = useRef(prompt);\n    const promptPoool = useRef(promptPool);\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    })\n\n    const loadPrompt = () => {\n        const isAlpha = (str) => /^[A-Za-z]+$/.test(str);\n\n        let newPrompt = \"\";\n        while (!isAlpha(newPrompt)) {\n            let index = Math.floor(Math.random() * 500);\n            let indexWord = promptPoool.current[index].word;\n            if (isAlpha(indexWord)) {\n                let sliceStart = Math.floor(Math.random() * 3) + 1;\n                newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n                setCouldAnswer(indexWord);\n                getDef(indexWord);\n            }\n        }\n        setPrompt(newPrompt);\n    };\n\n    const resetGame = () => {\n        setGameTime(20);\n        setGameScore(0);\n        setInputError(false);\n        setInputErrorMessage('');\n        loadPrompt();\n        setIsGameOver(false);\n    };\n\n    const playAudio = () => {\n        new Audio(Chime_01).play()\n      };\n\n    const answerSuccess = () => {\n        setGameScore((prevScore) => prevScore + 1);\n        setInputError(true);\n        setInputErrorMessage('+1');\n        setTimeout(clearInputMsg, 1500)\n        setAnswer('');\n        setGameTime(20);\n        loadPrompt();\n        setLoadingValidaton(false);\n    };\n\n    const getPromptPool = async () => {\n        try {\n            const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n            const data = await response.json();\n            setPromptPool(data);\n        } catch (error) {\n            console.error('Error fetching prompt pool:', error);\n        }\n    };\n\n    const setVals = (e) => {\n        setAnswer(e.target.value.toLowerCase());\n        setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n    };\n\n    const getDef = async (word) => {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n            if (response.status === 200) {\n                const data = await response.json()\n                setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n            } else {\n                console.error('Error getting definition');\n                setCouldAnswerDef('--')\n            }\n    };\n\n    const gameOver = () => {\n        setIsGameOver(true);\n        setInputError(true);\n        setInputErrorMessage(\"Game Over!\");\n    };\n\n    const decrement = () => {\n        setGameTime((prevTime) => prevTime - 1);\n    };\n\n    const clearInputMsg = () => {\n        if (inputErrorMessage !== \"Game Over\") {\n            setInputErrorMessage('')\n            setInputError(false)\n        }\n    };\n\n    useEffect(() => {\n        if (gameTime > 0 && !isGameOver) {\n            const timerId = setTimeout(decrement, 1000);\n            return () => clearTimeout(timerId);\n        } else if (gameTime === 0) {\n            gameOver();\n        }\n    }, [gameTime, isGameOver]);\n\n    useEffect(() => {\n        answerr.current = answer;\n    }, [answer]);\n\n    useEffect(() => {\n        promptt.current = prompt;\n    }, [prompt]);\n\n    useEffect(() => {\n        promptPoool.current = promptPool;\n    }, [promptPool]);\n\n    useEffect(() => {\n        getPromptPool();\n    }, []);\n\n    useEffect(() => {\n        if (promptPool.length > 0) {\n            loadPrompt();\n        }\n    }, [promptPool]);\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.keyCode === 13) {\n                validate();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, []);\n\n    const validate = async () => {\n        setLoadingValidaton(true)\n        const start = answerr.current.slice(0, 3);\n        const end = answerr.current.slice(-3);\n\n        try {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n            if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n                playAudio()\n                answerSuccess();\n            } else {\n                handleValidationError(response.status, start, end);\n            }\n        } catch (error) {\n            console.error('Error validating answer:', error);\n        }\n    };\n\n    const handleValidationError = (status, start, end) => {\n        if (status === 404) {\n            setInputErrorMessage('Not a Word!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1500)\n        } else if (start === promptt.current) {\n            setInputErrorMessage('Answer cannot start with the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1500)\n        } else if (end === promptt.current) {\n            setInputErrorMessage('Answer cannot end with the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1500)\n        } else if (!answerr.current.includes(promptt.current)) {\n            setInputErrorMessage('Answer must contain the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1500)\n        }\n        setInputError(true);\n        setAnswer('');\n    };\n\n    const saveAndSubmit = () => {\n        if (username.trim() === '') {\n            setUsernameError('Username cannot be empty');\n            return;\n        }\n\n        setSaveLoading(true);\n\n        const payload = {\n            username,\n            score: gameScore\n        };\n        axios.post('http://44.223.184.1:8080/score', payload)\n            .then((response) => {\n                if (response.status === 200) {\n                    setSaveLoading(false);\n                    props.setShowing('scoreboard');\n                }\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <div className='gameBox'>\n            <span className='topper'>Speedle</span>\n                <div className='attributesContainer'>\n                    {isGameOver ? (\n                            <div className='couldHave'>\n                                <span className='timeScoreText'>You could have answered \"{couldAnswer}\"</span>\n                                <span className='timeTextItalic'>\"{couldAnswerDef}\"</span>\n                            </div>\n                        ) : (\n                            <>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>TIME</span>\n                                    <span className='timeScoreText'>{gameTime}</span>\n                                </div>\n                                <div className='featureBoxPrompt'>\n                                    <span className='promptText'>[{prompt}]</span>\n                                </div>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>SCORE</span>\n                                    <span className='timeScoreText'>{gameScore}</span>\n                                </div>\n                            </>\n                        )}\n                </div>\n                <div className='inputContainer'>\n                    <p style={{position: 'relative', top: '5px'}}>'Enter' to Submit</p>\n                    <input disabled={isGameOver} autoComplete=\"off\" className='answerInput' onChange={setVals} value={answer} />   \n                        {loadingValidation ? (\n                                        <div className='inputError'>\n                                            <ClipLoader size={20} style={{position: 'absolute', right: '10px'}}/>\n                                        </div>\n                                    ) : (null)}\n                    {inputError && (\n                            <div className={ inputErrorMessage === '+1' ? 'inputErrorSuccess' : 'inputError' }>\n                                <span className='inputErrorText'>{inputErrorMessage}</span>\n                            </div>\n                    )}\n                    {inputErrorMessage === 'Game Over!' && (\n                                <div className='playOrSave'>\n                                    <button disabled={showScoreModal} onClick={resetGame} className='startButton'>Play Again</button>\n                                    {/* <button disabled={showScoreModal} onClick={() => setShowScoreModal(true)}className='startButton'>Save</button> */}\n                                    <button disabled={showScoreModal} onClick={() => props.setShowing('rules')}className='startButton'>Rules</button>\n                                </div>\n                            )}\n                    {showScoreModal && (\n                        <div className='enterScoreModal'>\n                            <span className='timeText'>You scored {gameScore}</span>\n                            <span className='timeText'>Enter a name to save your score</span>\n                            <input\n                                onChange={(e) => {\n                                    setUsername(e.target.value);\n                                    setUsernameError('');\n                                }}\n                                className='nameInput'\n                                value={username}\n                            />\n                            {usernameError && <div className='saveInputError'>{usernameError}</div>}\n                            {saveLoading ? (\n                                        <div className='inputError'>\n                                            <ClipLoader size={20} style={{position: 'absolute', top: '20px', right: '10px'}}/>\n                                        </div>\n                                    ) : (null)}\n                            <div>\n                                <button onClick={saveAndSubmit} className='startButton'>Save</button>\n                                <button onClick={() => setShowScoreModal(false)} className='startButton'>Cancel</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}