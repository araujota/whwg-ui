{"ast":null,"code":"import{useEffect,useRef,useState}from'react';import'./App.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function GameScreen(props){const[gameTime,setGameTime]=useState(100);const[gameScore,setGameScore]=useState(0);const[prompt,setPrompt]=useState('');const[answer,setAnswer]=useState('');const[inputError,setInputError]=useState(false);const[inputErrorMessage,setInputErrorMessage]=useState('');const[promptPool,setPromptPool]=useState([]);const[validateUrl,setValidateUrl]=useState('');const[isGameOver,setIsGameOver]=useState(false);const[showScoreModal,setShowScoreModal]=useState(false);const[username,setUsername]=useState('');const answerr=useRef(answer);const promptt=useRef(prompt);const promptPoool=useRef(promptPool);const loadPrompt=()=>{let index=Math.floor(Math.random()*500);let indexWord=promptPoool.current[index].word;if(!indexWord.includes('-')||!indexWord.includes(' ')){let sliceStart=Math.floor(Math.random()*3)+1;let thisPrompt=indexWord.substring(sliceStart,sliceStart+3);setPrompt(thisPrompt);}else{loadPrompt();}};const resetGame=()=>{setIsGameOver(false);setGameTime(100);setGameScore(gameScore=>0);setInputError(false);setInputErrorMessage('');loadPrompt();};const answerSuccess=()=>{setGameScore(gameScore=>gameScore+1);setInputError(false);setInputErrorMessage('');setAnswer('');loadPrompt();};async function getPromptPool(){await fetch(\"https://api.datamuse.com/words?sp=???????&max=500\").then(response=>{return response.json();}).then(response=>{setPromptPool(response);});}const setVals=e=>{setAnswer(e);setValidateUrl('https://api.dictionaryapi.dev/api/v2/entries/en/'+e);};const gameOver=()=>{setIsGameOver(true);setInputError(true);setInputErrorMessage(\"Game Over!\");};const decrement=()=>{let newTime=gameTime-1;setGameTime(newTime);};useEffect(()=>{if(gameTime>0){setTimeout(decrement,1000);}else{gameOver();}},[gameTime]);useEffect(()=>{console.log(username);},[username]);useEffect(()=>{answerr.current=answer;},[answer]);useEffect(()=>{promptt.current=prompt;},[prompt]);useEffect(()=>{promptPoool.current=promptPool;},[promptPool]);useEffect(()=>{getPromptPool();},[]);useEffect(()=>{if(promptPool.length>0){loadPrompt();}},[promptPool]);const handleValidate=()=>{validate();};const handleKeyDown=e=>{if(e.keyCode===13){handleValidate();}};useEffect(()=>{document.addEventListener('keydown',handleKeyDown);},[]);async function validate(){let start=answerr.current.slice(0,3);let end=answerr.current.slice(answerr.current.length-3,answerr.current.length);console.log(promptt.current);console.log(answerr.current);await fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+answerr.current).then(response=>{return response;}).then(response=>{if(response.status==200&&start!==promptt.current&&end!==promptt.current&&answerr.current.includes(promptt.current)){answerSuccess();}else{if(response.status==404){setInputErrorMessage('Not a Word!');setInputError(true);setAnswer('');}else if(start===promptt.current){setInputErrorMessage('Answer cannot start with the prompt!');setInputError(true);setAnswer('');}else if(end===promptt.current){setInputErrorMessage('Answer cannot end with the prompt!');setInputError(true);setAnswer('');}else if(!answerr.current.includes(promptt.current)){setInputErrorMessage('Answer must contain the prompt!');setInputError(true);setAnswer('');}}});}const saveAndSubmit=()=>{const payload={username:username,score:gameScore};axios.post('http://localhost:8080/score',payload).then(response=>{if(response.status==200){props.setShowing('scoreboard');}});};function ShowInputError(_ref){let{bool,errorMessage}=_ref;if(bool==true){if(errorMessage=='Game Over!'){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"inputError\",children:/*#__PURE__*/_jsx(\"text\",{style:{fontSize:'2em'},children:errorMessage})}),/*#__PURE__*/_jsxs(\"div\",{className:\"playOrSave\",children:[/*#__PURE__*/_jsx(\"text\",{onClick:()=>resetGame(),style:{fontSize:'2em',textDecoration:'underline'},children:\"Play Again\"}),/*#__PURE__*/_jsx(\"text\",{style:{fontSize:'2em'},children:\" or \"}),/*#__PURE__*/_jsx(\"text\",{onClick:()=>setShowScoreModal(true),style:{fontSize:'2em',textDecoration:'underline'},children:\"Save\"})]})]});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"inputError\",children:/*#__PURE__*/_jsx(\"text\",{style:{fontSize:'2em'},children:errorMessage})});}}}function ShowEnterScoreModal(_ref2){let{bool}=_ref2;if(bool==true){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"enterScoreModal\",children:[/*#__PURE__*/_jsxs(\"text\",{style:{fontSize:'3em'},children:[\"You scored \",gameScore]}),/*#__PURE__*/_jsx(\"text\",{style:{fontSize:'3em'},children:\"Enter a name to save your score\"}),/*#__PURE__*/_jsx(\"input\",{onChange:e=>setUsername(e.target.value),className:\"nameInput\",value:username}),/*#__PURE__*/_jsx(\"text\",{onClick:()=>saveAndSubmit(),style:{fontSize:'2em',textDecoration:'underline'},children:\"Save\"})]})});}}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"topper\",children:\"WHWG\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"gameBox\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"attributesContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"featureBox\",children:[/*#__PURE__*/_jsx(\"text\",{className:\"timeScoreText\",children:\"TIME\"}),/*#__PURE__*/_jsx(\"text\",{className:\"timeText\",children:gameTime})]}),/*#__PURE__*/_jsx(\"div\",{className:\"featureBoxPrompt\",children:/*#__PURE__*/_jsxs(\"text\",{className:\"promptText\",children:[\"[\",prompt,\"]\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"featureBox\",children:[/*#__PURE__*/_jsx(\"text\",{className:\"timeScoreText\",children:\"SCORE\"}),/*#__PURE__*/_jsx(\"text\",{className:\"timeText\",children:gameScore})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'6em'},children:\"[\"}),/*#__PURE__*/_jsx(\"input\",{disabled:isGameOver,className:\"answerInput\",onChange:e=>setVals(e.target.value),value:answer}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'6em'},children:\"]\"})]}),/*#__PURE__*/_jsx(ShowInputError,{bool:inputError,errorMessage:inputErrorMessage}),ShowEnterScoreModal({bool:showScoreModal})]})]})]});}export default GameScreen;","map":{"version":3,"names":["useEffect","useRef","useState","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GameScreen","props","gameTime","setGameTime","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","answerr","promptt","promptPoool","loadPrompt","index","Math","floor","random","indexWord","current","word","includes","sliceStart","thisPrompt","substring","resetGame","answerSuccess","getPromptPool","fetch","then","response","json","setVals","e","gameOver","decrement","newTime","setTimeout","console","log","length","handleValidate","validate","handleKeyDown","keyCode","document","addEventListener","start","slice","end","status","saveAndSubmit","payload","score","post","setShowing","ShowInputError","_ref","bool","errorMessage","children","className","style","fontSize","onClick","textDecoration","ShowEnterScoreModal","_ref2","onChange","target","value","disabled"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState  } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(100)\n    const [gameScore, setGameScore] = useState(0)\n    const [prompt, setPrompt] = useState('')\n    const [answer, setAnswer] = useState('')\n    const [inputError, setInputError] = useState(false)\n    const [inputErrorMessage, setInputErrorMessage] = useState('')\n    const [promptPool, setPromptPool] = useState([])\n    const [validateUrl, setValidateUrl] = useState('')\n    const [isGameOver, setIsGameOver] = useState(false)\n    const [showScoreModal, setShowScoreModal] = useState(false)\n    const [username, setUsername] = useState('')\n\n    const answerr = useRef(answer)\n    const promptt = useRef(prompt)\n    const promptPoool = useRef(promptPool)\n\n    \n    const loadPrompt = () => {\n        let index = Math.floor(Math.random()*500)\n        let indexWord = promptPoool.current[index].word\n        if (!indexWord.includes('-') || !indexWord.includes(' ')) {\n            let sliceStart = Math.floor(Math.random() * 3) + 1\n            let thisPrompt = indexWord.substring(sliceStart, sliceStart+3)\n            setPrompt(thisPrompt)\n        } else {\n            loadPrompt()\n        }\n    }\n\n    const resetGame = () => {\n        setIsGameOver(false)\n        setGameTime(100)\n        setGameScore(gameScore => (0))\n        setInputError(false)\n        setInputErrorMessage('')\n        loadPrompt()\n    }\n\n    const answerSuccess = () => {\n        setGameScore((gameScore) => (gameScore+1))\n        setInputError(false)\n        setInputErrorMessage('')\n        setAnswer('')\n        loadPrompt()\n    }\n\n    async function getPromptPool() {\n        await (fetch(\"https://api.datamuse.com/words?sp=???????&max=500\"))\n        .then(response => {return response.json()}\n        ).then(response => {\n            setPromptPool(response)\n        })\n    }\n\n    const setVals = (e) => {\n        setAnswer(e)\n        setValidateUrl('https://api.dictionaryapi.dev/api/v2/entries/en/'+e)\n    }\n\n    const gameOver = () => {\n        setIsGameOver(true)\n        setInputError(true)\n        setInputErrorMessage(\"Game Over!\")\n    }\n\n    const decrement = () => {\n        let newTime = gameTime-1\n        setGameTime(newTime)\n    }\n\n    useEffect(() => {\n        if (gameTime > 0) {\n            setTimeout(decrement, 1000)\n        } else {\n            gameOver()\n        }\n    }, [gameTime])\n\n    useEffect(() => {\n        console.log(username)\n    }, [username])\n\n    useEffect(() => {\n        answerr.current = answer\n    }, [answer])\n\n    useEffect(() => {\n        promptt.current = prompt\n    }, [prompt])\n\n    useEffect(() => {\n        promptPoool.current = promptPool\n    }, [promptPool])\n\n    useEffect(() => {\n        getPromptPool()\n    }, [])\n\n    useEffect(() => {\n        if(promptPool.length > 0) {\n            loadPrompt()\n        }\n    }, [promptPool])\n\n    const handleValidate = () => {\n        validate()\n    }\n\n    const handleKeyDown = (e) => {\n            if(e.keyCode === 13) {\n                handleValidate()\n            }\n      }\n\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n      }, []);\n\n    async function validate() {\n        let start = answerr.current.slice(0,3)\n        let end = answerr.current.slice(answerr.current.length-3, answerr.current.length)\n        console.log(promptt.current)\n        console.log(answerr.current)\n\n        await (fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+answerr.current)\n            .then(response => {\n                return response;\n            })\n            .then(response => {\n                if ((response.status == 200) && (start !== promptt.current) && (end !== promptt.current) && answerr.current.includes(promptt.current)) {\n                    answerSuccess()\n                } else {\n                    if(response.status == 404) {\n                        setInputErrorMessage('Not a Word!')\n                        setInputError(true)\n                        setAnswer('')\n                    } else if (start === promptt.current) {\n                        setInputErrorMessage('Answer cannot start with the prompt!')\n                        setInputError(true)\n                        setAnswer('')\n                    } else if (end === promptt.current) {\n                        setInputErrorMessage('Answer cannot end with the prompt!')\n                        setInputError(true)\n                        setAnswer('')\n                    } else if (!answerr.current.includes(promptt.current)){\n                        setInputErrorMessage('Answer must contain the prompt!')\n                        setInputError(true)\n                        setAnswer('')\n                    }\n                }\n            }))\n    }\n\n    const saveAndSubmit = () => {\n        const payload = {\n            username: username,\n            score: gameScore\n        }\n        axios.post('http://localhost:8080/score', payload).then((response) => {\n            if (response.status == 200) {\n                props.setShowing('scoreboard')\n            }\n        })\n    }\n\n    function ShowInputError({bool, errorMessage}) {\n        if (bool == true) {\n            if (errorMessage == 'Game Over!') {\n                return (\n                    <>\n                        <div className='inputError'>\n                            <text style={{fontSize: '2em'}}>{errorMessage}</text>\n                        </div>\n                        <div className='playOrSave'>\n                            <text onClick={() => resetGame()} style={{fontSize: '2em', textDecoration: 'underline'}}>Play Again</text>\n                            <text style={{fontSize: '2em'}}> or </text>\n                            <text onClick={() => setShowScoreModal(true)} style={{fontSize: '2em', textDecoration: 'underline'}} >Save</text>\n                        </div>\n                    </>\n                )\n            } else {\n                return (\n                    <div className='inputError'>\n                        <text style={{fontSize: '2em'}}>{errorMessage}</text>\n                    </div>\n                )\n            }\n        }\n    }\n\n    function ShowEnterScoreModal({bool}) {\n        if (bool == true) {\n            return (\n                <>\n                    <div className='enterScoreModal'>\n                        <text style={{fontSize: '3em'}}>You scored {gameScore}</text>\n                        <text style={{fontSize: '3em'}}>Enter a name to save your score</text>\n                        <input onChange={(e) => setUsername(e.target.value)} className='nameInput' value={username}></input>\n                        <text onClick={() => saveAndSubmit()} style={{fontSize: '2em', textDecoration: 'underline'}} >Save</text>\n                    </div>\n                </>\n            )\n        }\n    }\n\n  return (\n    <div className=\"container\">\n      <span className='topper'>WHWG</span>\n        <div className='gameBox'>\n            <div className='attributesContainer'>\n                <div className='featureBox'>\n                    <text className='timeScoreText'>TIME</text>\n                    <text className='timeText'>{gameTime}</text>\n                </div>\n                <div className='featureBoxPrompt'>\n                    <text className='promptText'>[{prompt}]</text>\n                </div>\n                <div className='featureBox'>\n                    <text className='timeScoreText'>SCORE</text>\n                    <text className='timeText'>{gameScore}</text>\n                </div>\n            </div>\n            <div className='inputContainer'>\n                <div>\n                    <span style={{fontSize: '6em'}}>[</span>\n                    <input disabled={isGameOver} className='answerInput' onChange={e => setVals(e.target.value)} value={answer}></input>\n                    <span style={{fontSize: '6em'}}>]</span>\n                </div>\n                <ShowInputError bool={inputError} errorMessage={inputErrorMessage}/>\n                {ShowEnterScoreModal ({bool: showScoreModal})}\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default GameScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}