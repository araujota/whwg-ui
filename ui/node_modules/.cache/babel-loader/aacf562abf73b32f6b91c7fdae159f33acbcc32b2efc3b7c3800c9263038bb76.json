{"ast":null,"code":"var _jsxFileName = \"/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameScreen(props) {\n  _s();\n  const [gameTime, setGameTime] = useState(20);\n  const [loadingValidation, setLoadingValidaton] = useState(false);\n  const [gameScore, setGameScore] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [promptPool, setPromptPool] = useState([]);\n  const [validateUrl, setValidateUrl] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [couldAnswer, setCouldAnswer] = useState('');\n  const [couldAnswerDef, setCouldAnswerDef] = useState('');\n  const answerr = useRef(answer);\n  const promptt = useRef(prompt);\n  const promptPoool = useRef(promptPool);\n  const loadPrompt = () => {\n    const isAlpha = str => /^[A-Za-z]+$/.test(str);\n    let newPrompt = \"\";\n    while (!isAlpha(newPrompt)) {\n      let index = Math.floor(Math.random() * 500);\n      let indexWord = promptPoool.current[index].word;\n      if (isAlpha(indexWord)) {\n        let sliceStart = Math.floor(Math.random() * 3) + 1;\n        newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n        setCouldAnswer(indexWord);\n        getDef(indexWord);\n      }\n    }\n    setPrompt(newPrompt);\n  };\n  const resetGame = () => {\n    setGameTime(20);\n    setGameScore(0);\n    setInputError(false);\n    setInputErrorMessage('');\n    loadPrompt();\n    setIsGameOver(false);\n  };\n  const answerSuccess = () => {\n    setGameScore(prevScore => prevScore + 1);\n    setInputError(true);\n    setInputErrorMessage('+1');\n    setTimeout(clearInputMsg, 1000);\n    setAnswer('');\n    setGameTime(20);\n    loadPrompt();\n    setLoadingValidaton(false);\n  };\n  const getPromptPool = async () => {\n    try {\n      const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n      const data = await response.json();\n      setPromptPool(data);\n    } catch (error) {\n      console.error('Error fetching prompt pool:', error);\n    }\n  };\n  const setVals = e => {\n    setAnswer(e.target.value);\n    setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n  };\n  const getDef = async word => {\n    const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n    } else {\n      console.error('Error getting definition');\n      setCouldAnswerDef('--');\n    }\n  };\n  const gameOver = () => {\n    setIsGameOver(true);\n    setInputError(true);\n    setInputErrorMessage(\"Game Over!\");\n  };\n  const decrement = () => {\n    setGameTime(prevTime => prevTime - 1);\n  };\n  const clearInputMsg = () => {\n    setInputErrorMessage('');\n    setInputError(false);\n  };\n  useEffect(() => {\n    if (gameTime > 0 && !isGameOver) {\n      const timerId = setTimeout(decrement, 1000);\n      return () => clearTimeout(timerId);\n    } else if (gameTime === 0) {\n      gameOver();\n    }\n  }, [gameTime, isGameOver]);\n  useEffect(() => {\n    answerr.current = answer;\n  }, [answer]);\n  useEffect(() => {\n    promptt.current = prompt;\n  }, [prompt]);\n  useEffect(() => {\n    promptPoool.current = promptPool;\n  }, [promptPool]);\n  useEffect(() => {\n    getPromptPool();\n  }, []);\n  useEffect(() => {\n    if (promptPool.length > 0) {\n      loadPrompt();\n    }\n  }, [promptPool]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        validate();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  const validate = async () => {\n    setLoadingValidaton(true);\n    const start = answerr.current.slice(0, 3);\n    const end = answerr.current.slice(-3);\n    try {\n      const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n      if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n        answerSuccess();\n      } else {\n        handleValidationError(response.status, start, end);\n      }\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n  const handleValidationError = (status, start, end) => {\n    if (status === 404) {\n      setInputErrorMessage('Not a Word!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1000);\n    } else if (start === promptt.current) {\n      setInputErrorMessage('Answer cannot start with the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1000);\n    } else if (end === promptt.current) {\n      setInputErrorMessage('Answer cannot end with the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1000);\n    } else if (!answerr.current.includes(promptt.current)) {\n      setInputErrorMessage('Answer must contain the prompt!');\n      setLoadingValidaton(false);\n      setTimeout(clearInputMsg, 1000);\n    }\n    setInputError(true);\n    setAnswer('');\n  };\n  const saveAndSubmit = () => {\n    if (username.trim() === '') {\n      setUsernameError('Username cannot be empty');\n      return;\n    }\n    const payload = {\n      username,\n      score: gameScore\n    };\n    axios.post('http://44.223.184.1:8080/score', payload).then(response => {\n      if (response.status === 200) {\n        props.setShowing('scoreboard');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"topper\",\n      children: \"Speedle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributesContainer\",\n        children: isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"couldHave\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeScoreText\",\n            children: [\"You could have answered \\\"\", couldAnswer, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeTextItalic\",\n            children: [\"\\\"\", couldAnswerDef, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"TIME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBoxPrompt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"promptText\",\n              children: [\"[\", prompt, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"SCORE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          disabled: isGameOver,\n          className: \"answerInput\",\n          onChange: setVals,\n          value: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), loadingValidation ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 41\n        }, this) : null, inputError && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inputErrorText\",\n              children: inputErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this), inputErrorMessage === 'Game Over!' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playOrSave\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: showScoreModal,\n              onClick: resetGame,\n              className: \"startButton\",\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: showScoreModal,\n              onClick: () => setShowScoreModal(true),\n              className: \"startButton\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: showScoreModal,\n              onClick: () => props.setShowing('rules'),\n              className: \"startButton\",\n              children: \"Rules\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), showScoreModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enterScoreModal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: [\"You scored \", gameScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: \"Enter a name to save your score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setUsername(e.target.value);\n              setUsernameError('');\n            },\n            className: \"nameInput\",\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveAndSubmit,\n              className: \"startButton\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowScoreModal(false),\n              className: \"startButton\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"GlHCm6T6Qxa2EX371RSIF4878no=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","ClipLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","props","_s","gameTime","setGameTime","loadingValidation","setLoadingValidaton","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","usernameError","setUsernameError","couldAnswer","setCouldAnswer","couldAnswerDef","setCouldAnswerDef","answerr","promptt","promptPoool","loadPrompt","isAlpha","str","test","newPrompt","index","Math","floor","random","indexWord","current","word","sliceStart","substring","getDef","resetGame","answerSuccess","prevScore","setTimeout","clearInputMsg","getPromptPool","response","fetch","data","json","error","console","setVals","e","target","value","status","meanings","definitions","definition","gameOver","decrement","prevTime","timerId","clearTimeout","length","handleKeyDown","keyCode","validate","document","addEventListener","removeEventListener","start","slice","end","includes","handleValidationError","saveAndSubmit","trim","payload","score","post","then","setShowing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onChange","size","onClick","_c","$RefreshReg$"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(20);\n    const [loadingValidation, setLoadingValidaton] = useState(false);\n    const [gameScore, setGameScore] = useState(0);\n    const [prompt, setPrompt] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n    const [promptPool, setPromptPool] = useState([]);\n    const [validateUrl, setValidateUrl] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n    const [username, setUsername] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [couldAnswer, setCouldAnswer] = useState('')\n    const [couldAnswerDef, setCouldAnswerDef] = useState('')\n\n    const answerr = useRef(answer);\n    const promptt = useRef(prompt);\n    const promptPoool = useRef(promptPool);\n\n    const loadPrompt = () => {\n        const isAlpha = (str) => /^[A-Za-z]+$/.test(str);\n\n        let newPrompt = \"\";\n        while (!isAlpha(newPrompt)) {\n            let index = Math.floor(Math.random() * 500);\n            let indexWord = promptPoool.current[index].word;\n            if (isAlpha(indexWord)) {\n                let sliceStart = Math.floor(Math.random() * 3) + 1;\n                newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n                setCouldAnswer(indexWord);\n                getDef(indexWord);\n            }\n        }\n        setPrompt(newPrompt);\n    };\n\n    const resetGame = () => {\n        setGameTime(20);\n        setGameScore(0);\n        setInputError(false);\n        setInputErrorMessage('');\n        loadPrompt();\n        setIsGameOver(false);\n    };\n\n    const answerSuccess = () => {\n        setGameScore((prevScore) => prevScore + 1);\n        setInputError(true)\n        setInputErrorMessage('+1');\n        setTimeout(clearInputMsg, 1000)\n        setAnswer('');\n        setGameTime(20);\n        loadPrompt();\n        setLoadingValidaton(false);\n    };\n\n    const getPromptPool = async () => {\n        try {\n            const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n            const data = await response.json();\n            setPromptPool(data);\n        } catch (error) {\n            console.error('Error fetching prompt pool:', error);\n        }\n    };\n\n    const setVals = (e) => {\n        setAnswer(e.target.value);\n        setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n    };\n\n    const getDef = async (word) => {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n            if (response.status === 200) {\n                const data = await response.json()\n                setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n            } else {\n                console.error('Error getting definition');\n                setCouldAnswerDef('--')\n            }\n    };\n\n    const gameOver = () => {\n        setIsGameOver(true);\n        setInputError(true);\n        setInputErrorMessage(\"Game Over!\");\n    };\n\n    const decrement = () => {\n        setGameTime((prevTime) => prevTime - 1);\n    };\n\n    const clearInputMsg = () => {\n        setInputErrorMessage('')\n        setInputError(false)\n    };\n\n    useEffect(() => {\n        if (gameTime > 0 && !isGameOver) {\n            const timerId = setTimeout(decrement, 1000);\n            return () => clearTimeout(timerId);\n        } else if (gameTime === 0) {\n            gameOver();\n        }\n    }, [gameTime, isGameOver]);\n\n    useEffect(() => {\n        answerr.current = answer;\n    }, [answer]);\n\n    useEffect(() => {\n        promptt.current = prompt;\n    }, [prompt]);\n\n    useEffect(() => {\n        promptPoool.current = promptPool;\n    }, [promptPool]);\n\n    useEffect(() => {\n        getPromptPool();\n    }, []);\n\n    useEffect(() => {\n        if (promptPool.length > 0) {\n            loadPrompt();\n        }\n    }, [promptPool]);\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.keyCode === 13) {\n                validate();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, []);\n\n    const validate = async () => {\n        setLoadingValidaton(true)\n        const start = answerr.current.slice(0, 3);\n        const end = answerr.current.slice(-3);\n\n        try {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${answerr.current}`);\n            if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n                answerSuccess();\n            } else {\n                handleValidationError(response.status, start, end);\n            }\n        } catch (error) {\n            console.error('Error validating answer:', error);\n        }\n    };\n\n    const handleValidationError = (status, start, end) => {\n        if (status === 404) {\n            setInputErrorMessage('Not a Word!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1000)\n        } else if (start === promptt.current) {\n            setInputErrorMessage('Answer cannot start with the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1000)\n        } else if (end === promptt.current) {\n            setInputErrorMessage('Answer cannot end with the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1000)\n        } else if (!answerr.current.includes(promptt.current)) {\n            setInputErrorMessage('Answer must contain the prompt!');\n            setLoadingValidaton(false);\n            setTimeout(clearInputMsg, 1000)\n        }\n        setInputError(true);\n        setAnswer('');\n    };\n\n    const saveAndSubmit = () => {\n        if (username.trim() === '') {\n            setUsernameError('Username cannot be empty');\n            return;\n        }\n\n        const payload = {\n            username,\n            score: gameScore\n        };\n        axios.post('http://44.223.184.1:8080/score', payload)\n            .then((response) => {\n                if (response.status === 200) {\n                    props.setShowing('scoreboard');\n                }\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <span className='topper'>Speedle</span>\n            <div className='gameBox'>\n                <div className='attributesContainer'>\n                    {isGameOver ? (\n                            <div className='couldHave'>\n                                <span className='timeScoreText'>You could have answered \"{couldAnswer}\"</span>\n                                <span className='timeTextItalic'>\"{couldAnswerDef}\"</span>\n                            </div>\n                        ) : (\n                            <>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>TIME</span>\n                                    <span className='timeScoreText'>{gameTime}</span>\n                                </div>\n                                <div className='featureBoxPrompt'>\n                                    <span className='promptText'>[{prompt}]</span>\n                                </div>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>SCORE</span>\n                                    <span className='timeScoreText'>{gameScore}</span>\n                                </div>\n                            </>\n                        )}\n                </div>\n                <div className='inputContainer'>\n                    <input disabled={isGameOver} className='answerInput' onChange={setVals} value={answer} />   \n                        {loadingValidation ? (\n                                        <ClipLoader size={20}/>\n                                    ) : (null)}\n                    {inputError && (\n                        <>\n                            <div className='inputError'>\n                                <span className='inputErrorText'>{inputErrorMessage}</span>\n                            </div>\n                            {inputErrorMessage === 'Game Over!' && (\n                                <div className='playOrSave'>\n                                    <button disabled={showScoreModal} onClick={resetGame} className='startButton'>Play Again</button>\n                                    <button disabled={showScoreModal} onClick={() => setShowScoreModal(true)}className='startButton'>Save</button>\n                                    <button disabled={showScoreModal} onClick={() => props.setShowing('rules')}className='startButton'>Rules</button>\n                                </div>\n                            )}\n                        </>\n                    )}\n                    {showScoreModal && (\n                        <div className='enterScoreModal'>\n                            <span className='timeText'>You scored {gameScore}</span>\n                            <span className='timeText'>Enter a name to save your score</span>\n                            <input\n                                onChange={(e) => {\n                                    setUsername(e.target.value);\n                                    setUsernameError('');\n                                }}\n                                className='nameInput'\n                                value={username}\n                            />\n                            {usernameError && <div className='inputError'>{usernameError}</div>}\n                            <div>\n                                <button onClick={saveAndSubmit} className='startButton'>Save</button>\n                                <button onClick={() => setShowScoreModal(false)} className='startButton'>Cancel</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}