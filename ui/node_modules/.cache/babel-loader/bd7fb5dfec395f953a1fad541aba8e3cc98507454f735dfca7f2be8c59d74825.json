{"ast":null,"code":"var _jsxFileName = \"/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\nimport Chime_01 from './assets/Chime_01.mp3';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GameScreen(props) {\n  _s();\n  const [gameTime, setGameTime] = useState(20);\n  const [loadingValidation, setLoadingValidaton] = useState(false);\n  const [gameScore, setGameScore] = useState(0);\n  const [prompt, setPrompt] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [inputErrorMessage, setInputErrorMessage] = useState('');\n  const [promptPool, setPromptPool] = useState([]);\n  const [validateUrl, setValidateUrl] = useState('');\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showScoreModal, setShowScoreModal] = useState(false);\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [couldAnswer, setCouldAnswer] = useState('');\n  const [couldAnswerDef, setCouldAnswerDef] = useState('');\n  const [saveLoading, setSaveLoading] = useState(false);\n  const [skipCount, setSkipCount] = useState(3);\n  const answerr = useRef(answer);\n  const promptt = useRef(prompt);\n  const promptPoool = useRef(promptPool);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [gameTime]);\n  const loadPrompt = () => {\n    const isAlpha = str => /^[A-Za-z]+$/.test(str);\n    let newPrompt = \"\";\n    while (!isAlpha(newPrompt)) {\n      let index = Math.floor(Math.random() * 500);\n      let indexWord = promptPoool.current[index].word;\n      if (isAlpha(indexWord)) {\n        let sliceStart = Math.floor(Math.random() * 3) + 1;\n        newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n        setCouldAnswer(indexWord);\n        getDef(indexWord);\n      }\n    }\n    setPrompt(newPrompt);\n  };\n  const resetGame = () => {\n    setAnswer('');\n    setGameTime(20);\n    setGameScore(0);\n    setSkipCount(3);\n    setInputError(false);\n    setInputErrorMessage('');\n    loadPrompt();\n    setIsGameOver(false);\n  };\n  const playAudio = () => {\n    new Audio(Chime_01).play();\n  };\n  const skipPropmt = () => {\n    setSkipCount(skipCount - 1);\n    loadPrompt();\n    setGameTime(20);\n  };\n  const answerSuccess = () => {\n    setGameScore(prevScore => prevScore + 1);\n    setInputError(true);\n    setInputErrorMessage('+1');\n    setAnswer('');\n    setGameTime(20);\n    loadPrompt();\n    setLoadingValidaton(false);\n  };\n  const getPromptPool = async () => {\n    try {\n      const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n      const data = await response.json();\n      setPromptPool(data);\n    } catch (error) {\n      console.error('Error fetching prompt pool:', error);\n    }\n  };\n  const setVals = e => {\n    setAnswer(e.target.value.toLowerCase());\n    setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n  };\n  const getDef = async word => {\n    const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n    if (response.status === 200) {\n      const data = await response.json();\n      setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n    } else {\n      console.error('Error getting definition');\n      setCouldAnswerDef('--');\n    }\n  };\n  const gameOver = () => {\n    inputRef.current.blur();\n    setIsGameOver(true);\n    setInputError(false);\n    setInputErrorMessage('');\n    setAnswer(`Your Score : ${gameScore}`);\n  };\n  const decrement = () => {\n    setGameTime(prevTime => prevTime - 1);\n  };\n  useEffect(() => {\n    if (gameTime > 0 && !isGameOver) {\n      const timerId = setTimeout(decrement, 1000);\n      return () => clearTimeout(timerId);\n    } else if (gameTime === 0) {\n      gameOver();\n    }\n  }, [gameTime, isGameOver]);\n  useEffect(() => {\n    answerr.current = answer;\n  }, [answer]);\n  useEffect(() => {\n    promptt.current = prompt;\n  }, [prompt]);\n  useEffect(() => {\n    promptPoool.current = promptPool;\n  }, [promptPool]);\n  useEffect(() => {\n    getPromptPool();\n  }, []);\n  useEffect(() => {\n    if (promptPool.length > 0) {\n      loadPrompt();\n    }\n  }, [promptPool]);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.keyCode === 13) {\n        validate();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, []);\n  const validate = async () => {\n    setLoadingValidaton(true);\n    const start = answerr.current.slice(0, 3);\n    const end = answerr.current.slice(-3);\n    try {\n      fetch(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${answerr.current}?key=7db26f3a-a877-4b4d-8f05-91a5ebe4c4ae`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        console.log(response.json());\n        return response.json();\n      }).then(data => {\n        parseRes;\n      });\n      if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n        playAudio();\n        let data = response.json();\n        console.log(data['meta']);\n        answerSuccess();\n      } else {\n        handleValidationError(response.status, start, end);\n      }\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n  const handleValidationError = (status, start, end) => {\n    if (status === 404) {\n      setInputErrorMessage('Not a Word!');\n      setLoadingValidaton(false);\n    } else if (start === promptt.current) {\n      setInputErrorMessage('Answer cannot start with the prompt!');\n      setLoadingValidaton(false);\n    } else if (end === promptt.current) {\n      setInputErrorMessage('Answer cannot end with the prompt!');\n      setLoadingValidaton(false);\n    } else if (!answerr.current.includes(promptt.current)) {\n      setInputErrorMessage('Answer must contain the prompt!');\n      setLoadingValidaton(false);\n    }\n    setInputError(true);\n    setAnswer('');\n  };\n  const saveAndSubmit = () => {\n    if (username.trim() === '') {\n      setUsernameError('Username cannot be empty');\n      return;\n    }\n    setSaveLoading(true);\n    const payload = {\n      username,\n      score: gameScore\n    };\n    axios.post('http://44.223.184.1:8080/score', payload).then(response => {\n      if (response.status === 200) {\n        setSaveLoading(false);\n        props.setShowing('scoreboard');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"topper\",\n        children: \"Speedle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attributesContainer\",\n        children: isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"couldHave\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeScoreText\",\n            children: [\"You could have answered \\\"\", couldAnswer, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 33\n          }, this), couldAnswerDef.length && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeTextItalic\",\n            children: [\"\\\"\", couldAnswerDef, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"TIME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBoxPrompt\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"promptText\",\n              children: [\"[\", prompt, \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"featureBox\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: \"SCORE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timeScoreText\",\n              children: gameScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [!isGameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            position: 'relative',\n            top: '5px'\n          },\n          children: \"'Enter' to Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          disabled: isGameOver,\n          autoComplete: \"off\",\n          className: \"answerInput\",\n          onChange: setVals,\n          value: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), loadingValidation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputError\",\n          children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n            size: 20,\n            style: {\n              position: 'absolute',\n              right: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 41\n        }, this) : null, inputError && !loadingValidation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: inputErrorMessage === '+1' ? 'inputErrorSuccess' : 'inputError',\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inputErrorText\",\n            children: inputErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 29\n        }, this), !isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !skipCount > 0,\n            onClick: () => skipPropmt(),\n            className: \"startButton\",\n            children: [\"Skip: \", skipCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playOrSave\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: showScoreModal,\n            onClick: resetGame,\n            className: \"startButton\",\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: showScoreModal,\n            onClick: () => props.setShowing('rules'),\n            className: \"startButton\",\n            children: \"Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 33\n        }, this), showScoreModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enterScoreModal\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: [\"You scored \", gameScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timeText\",\n            children: \"Enter a name to save your score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setUsername(e.target.value);\n              setUsernameError('');\n            },\n            className: \"nameInput\",\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), usernameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saveInputError\",\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 47\n          }, this), saveLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputError\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              size: 20,\n              style: {\n                position: 'absolute',\n                top: '20px',\n                right: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 41\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: saveAndSubmit,\n              className: \"startButton\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowScoreModal(false),\n              className: \"startButton\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n_s(GameScreen, \"AFaBGGXutmWsk6USatTcK4A+Nk4=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["useEffect","useRef","useState","axios","ClipLoader","Chime_01","response","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","props","_s","gameTime","setGameTime","loadingValidation","setLoadingValidaton","gameScore","setGameScore","prompt","setPrompt","answer","setAnswer","inputError","setInputError","inputErrorMessage","setInputErrorMessage","promptPool","setPromptPool","validateUrl","setValidateUrl","isGameOver","setIsGameOver","showScoreModal","setShowScoreModal","username","setUsername","usernameError","setUsernameError","couldAnswer","setCouldAnswer","couldAnswerDef","setCouldAnswerDef","saveLoading","setSaveLoading","skipCount","setSkipCount","answerr","promptt","promptPoool","inputRef","current","focus","loadPrompt","isAlpha","str","test","newPrompt","index","Math","floor","random","indexWord","word","sliceStart","substring","getDef","resetGame","playAudio","Audio","play","skipPropmt","answerSuccess","prevScore","getPromptPool","fetch","data","json","error","console","setVals","e","target","value","toLowerCase","status","meanings","definitions","definition","gameOver","blur","decrement","prevTime","timerId","setTimeout","clearTimeout","length","handleKeyDown","keyCode","validate","document","addEventListener","removeEventListener","start","slice","end","then","ok","Error","log","parseRes","includes","handleValidationError","saveAndSubmit","trim","payload","score","post","setShowing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","ref","disabled","autoComplete","onChange","size","right","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/tyleraraujo/whwg-ui/whwg-ui/ui/src/gameScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ClipLoader from 'react-spinners/CircleLoader';\nimport Chime_01 from './assets/Chime_01.mp3'\nimport { response } from 'express';\n\nfunction GameScreen(props) {\n    const [gameTime, setGameTime] = useState(20);\n    const [loadingValidation, setLoadingValidaton] = useState(false);\n    const [gameScore, setGameScore] = useState(0);\n    const [prompt, setPrompt] = useState('');\n    const [answer, setAnswer] = useState('');\n    const [inputError, setInputError] = useState(false);\n    const [inputErrorMessage, setInputErrorMessage] = useState('');\n    const [promptPool, setPromptPool] = useState([]);\n    const [validateUrl, setValidateUrl] = useState('');\n    const [isGameOver, setIsGameOver] = useState(false);\n    const [showScoreModal, setShowScoreModal] = useState(false);\n    const [username, setUsername] = useState('');\n    const [usernameError, setUsernameError] = useState('');\n    const [couldAnswer, setCouldAnswer] = useState('')\n    const [couldAnswerDef, setCouldAnswerDef] = useState('')\n    const [saveLoading, setSaveLoading] = useState(false);\n    const [skipCount, setSkipCount] = useState(3);\n\n    const answerr = useRef(answer);\n    const promptt = useRef(prompt);\n    const promptPoool = useRef(promptPool);\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [gameTime])\n\n    const loadPrompt = () => {\n        const isAlpha = (str) => /^[A-Za-z]+$/.test(str);\n\n        let newPrompt = \"\";\n        while (!isAlpha(newPrompt)) {\n            let index = Math.floor(Math.random() * 500);\n            let indexWord = promptPoool.current[index].word;\n            if (isAlpha(indexWord)) {\n                let sliceStart = Math.floor(Math.random() * 3) + 1;\n                newPrompt = indexWord.substring(sliceStart, sliceStart + 3);\n                setCouldAnswer(indexWord);\n                getDef(indexWord);\n            }\n        }\n        setPrompt(newPrompt);\n    };\n\n    const resetGame = () => {\n        setAnswer('');\n        setGameTime(20);\n        setGameScore(0);\n        setSkipCount(3);\n        setInputError(false);\n        setInputErrorMessage('');\n        loadPrompt();\n        setIsGameOver(false);\n    };\n\n    const playAudio = () => {\n        new Audio(Chime_01).play()\n      };\n\n    const skipPropmt = () => {\n        setSkipCount(skipCount -1)\n        loadPrompt()\n        setGameTime(20);\n    }\n\n    const answerSuccess = () => {\n        setGameScore((prevScore) => prevScore + 1);\n        setInputError(true);\n        setInputErrorMessage('+1');\n        setAnswer('');\n        setGameTime(20);\n        loadPrompt();\n        setLoadingValidaton(false);\n    };\n\n    const getPromptPool = async () => {\n        try {\n            const response = await fetch(\"https://api.datamuse.com/words?sp=????????&max=500\");\n            const data = await response.json();\n            setPromptPool(data);\n        } catch (error) {\n            console.error('Error fetching prompt pool:', error);\n        }\n    };\n\n    const setVals = (e) => {\n        setAnswer(e.target.value.toLowerCase());\n        setValidateUrl(`https://api.dictionaryapi.dev/api/v2/entries/en/${e.target.value}`);\n    };\n\n    const getDef = async (word) => {\n            const response = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n            if (response.status === 200) {\n                const data = await response.json()\n                setCouldAnswerDef(data[0].meanings[0].definitions[0].definition);\n            } else {\n                console.error('Error getting definition');\n                setCouldAnswerDef('--')\n            }\n    };\n\n    const gameOver = () => {\n        inputRef.current.blur();\n        setIsGameOver(true);\n        setInputError(false);\n        setInputErrorMessage('');\n        setAnswer(`Your Score : ${gameScore}`)\n    };\n\n    const decrement = () => {\n        setGameTime((prevTime) => prevTime - 1);\n    };\n\n    useEffect(() => {\n        if (gameTime > 0 && !isGameOver) {\n            const timerId = setTimeout(decrement, 1000);\n            return () => clearTimeout(timerId);\n        } else if (gameTime === 0) {\n            gameOver();\n        }\n    }, [gameTime, isGameOver]);\n\n    useEffect(() => {\n        answerr.current = answer;\n    }, [answer]);\n\n    useEffect(() => {\n        promptt.current = prompt;\n    }, [prompt]);\n\n    useEffect(() => {\n        promptPoool.current = promptPool;\n    }, [promptPool]);\n\n    useEffect(() => {\n        getPromptPool();\n    }, []);\n\n    useEffect(() => {\n        if (promptPool.length > 0) {\n            loadPrompt();\n        }\n    }, [promptPool]);\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.keyCode === 13) {\n                validate();\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, []);\n\n    const validate = async () => {\n        setLoadingValidaton(true)\n        const start = answerr.current.slice(0, 3);\n        const end = answerr.current.slice(-3);\n\n        try {\n            fetch(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${answerr.current}?key=7db26f3a-a877-4b4d-8f05-91a5ebe4c4ae`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                console.log(response.json())\n                return response.json();\n                \n            })\n            .then(data => {\n                parseRes\n            }\n            )\n            if (response.status === 200 && start !== promptt.current && end !== promptt.current && answerr.current.includes(promptt.current)) {\n                playAudio()\n                let data = response.json()\n                \n                console.log(data['meta'])\n                answerSuccess();\n            } else {\n                handleValidationError(response.status, start, end);\n            }\n        } catch (error) {\n            console.error('Error validating answer:', error);\n        }\n    };\n\n    const handleValidationError = (status, start, end) => {\n        if (status === 404) {\n            setInputErrorMessage('Not a Word!');\n            setLoadingValidaton(false);\n            \n        } else if (start === promptt.current) {\n            setInputErrorMessage('Answer cannot start with the prompt!');\n            setLoadingValidaton(false);\n            \n        } else if (end === promptt.current) {\n            setInputErrorMessage('Answer cannot end with the prompt!');\n            setLoadingValidaton(false);\n            \n        } else if (!answerr.current.includes(promptt.current)) {\n            setInputErrorMessage('Answer must contain the prompt!');\n            setLoadingValidaton(false);\n            \n        }\n        setInputError(true);\n        setAnswer('');\n    };\n\n    const saveAndSubmit = () => {\n        if (username.trim() === '') {\n            setUsernameError('Username cannot be empty');\n            return;\n        }\n\n        setSaveLoading(true);\n\n        const payload = {\n            username,\n            score: gameScore\n        };\n        axios.post('http://44.223.184.1:8080/score', payload)\n            .then((response) => {\n                if (response.status === 200) {\n                    setSaveLoading(false);\n                    props.setShowing('scoreboard');\n                }\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <div className='gameBox'>\n            <span className='topper'>Speedle</span>\n                <div className='attributesContainer'>\n                    {isGameOver ? (\n                            <div className='couldHave'>\n                                <span className='timeScoreText'>You could have answered \"{couldAnswer}\"</span>\n                                {couldAnswerDef.length && \n                                    <span className='timeTextItalic'>\"{couldAnswerDef}\"</span>\n                                }       \n                            </div>\n                        ) : (\n                            <>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>TIME</span>\n                                    <span className='timeScoreText'>{gameTime}</span>\n                                </div>\n                                <div className='featureBoxPrompt'>\n                                    <span className='promptText'>[{prompt}]</span>\n                                </div>\n                                <div className='featureBox'>\n                                    <span className='timeScoreText'>SCORE</span>\n                                    <span className='timeScoreText'>{gameScore}</span>\n                                </div>\n                            </>\n                        )}\n                </div>\n                <div className='inputContainer'>\n                    {!isGameOver &&\n                        <p style={{position: 'relative', top: '5px'}}>'Enter' to Submit</p>\n                    }\n                    <input ref={inputRef} disabled={isGameOver} autoComplete=\"off\" className='answerInput' onChange={setVals} value={answer} />   \n                        {loadingValidation ? (\n                                        <div className='inputError'>\n                                            <ClipLoader size={20} style={{position: 'absolute', right: '10px'}}/>\n                                        </div>\n                                    ) : (null)}\n                    {inputError && !loadingValidation && (\n                            <div className={ inputErrorMessage === '+1' ? 'inputErrorSuccess' : 'inputError' }>\n                                <span className='inputErrorText'>{inputErrorMessage}</span>\n                            </div>\n                    )}\n                    {!isGameOver && \n                        <div style={{marginTop: '30px'}}>\n                            <button disabled={!skipCount > 0} onClick={() => skipPropmt()} className='startButton'>Skip: {skipCount}</button>\n                        </div>    \n                    }\n                    \n                    \n                    {isGameOver && (\n                                <div className='playOrSave'>\n                                    <button disabled={showScoreModal} onClick={resetGame} className='startButton'>Play Again</button>\n                                    {/* <button disabled={showScoreModal} onClick={() => setShowScoreModal(true)}className='startButton'>Save</button> */}\n                                    <button disabled={showScoreModal} onClick={() => props.setShowing('rules')}className='startButton'>Rules</button>\n                                </div>\n                            )}\n                    {showScoreModal && (\n                        <div className='enterScoreModal'>\n                            <span className='timeText'>You scored {gameScore}</span>\n                            <span className='timeText'>Enter a name to save your score</span>\n                            <input\n                                onChange={(e) => {\n                                    setUsername(e.target.value);\n                                    setUsernameError('');\n                                }}\n                                className='nameInput'\n                                value={username}\n                            />\n                            {usernameError && <div className='saveInputError'>{usernameError}</div>}\n                            {saveLoading ? (\n                                        <div className='inputError'>\n                                            <ClipLoader size={20} style={{position: 'absolute', top: '20px', right: '10px'}}/>\n                                        </div>\n                                    ) : (null)}\n                            <div>\n                                <button onClick={saveAndSubmit} className='startButton'>Save</button>\n                                <button onClick={() => setShowScoreModal(false)} className='startButton'>Cancel</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}